<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on 說故事給你聽</title>
    <link>https://hugo.balduran.cc/tags/tools/</link>
    <description>Recent content in tools on 說故事給你聽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Sep 2016 01:41:15 +0000</lastBuildDate>
    
	<atom:link href="https://hugo.balduran.cc/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>php codes analyze tools</title>
      <link>https://hugo.balduran.cc/post/php-codes-analyze-tools/</link>
      <pubDate>Tue, 20 Sep 2016 01:41:15 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/php-codes-analyze-tools/</guid>
      <description>PHP 程式檢測工具
 php -l xxx.php 最簡單，僅檢查 syntax PHPSA phar或composer安裝，靜態檢查工具 PHP_CodeSniffer phpcs，曾經存在過 PHPMD 一樣 phar或composer安裝，仿自 java 的 PMD  </description>
    </item>
    
    <item>
      <title>App for traveling</title>
      <link>https://hugo.balduran.cc/post/app-for-traveling/</link>
      <pubDate>Fri, 03 Jun 2016 19:42:47 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/app-for-traveling/</guid>
      <description>旅行好用 APP
無關乎是自助旅行或是商務出差，旅行總是到達一個陌生的地方，有些手機 app 可以幫上大忙。
  Map
 Google Map，地圖不用說，一定是第一個需要的，早期 Google Map 需要網路，不過也會 cache你瀏覽過的區域，現在他還提供了離線區域的功能，可以先下載好特定區域的地圖。 maps.me 離線地圖，我最常用的離線地圖，時常更新。    Tripadvisor 住宿，景點，都有豐富的資料，各種語言都有，網友的評價都值得參考，透過 Tripadvisor 預定的房間有時候有便宜一點點。
  查機票
 Skyscanner 這個應該不用多解釋，可以先查一下了解價格帶 Kayak 如果是美洲的機票和住宿，Kayak 有機會出現不錯的價格 ITA Matrix 查路線和航空公司組合，最強規劃引擎，沒有之一，有機會發現多一個轉機點但票價便宜很多的路線。    行程管理
 Tripit，老牌的，資料很多都要自己 keyin，但可以寫很多詳盡的註記，如果習慣自己用 excel 也是不錯的替代方法。 tripcase 最好用的功能是將訂位代碼自動帶入班機資訊，有時候訂位代碼會有一個隱藏的訂位代碼，tripcase 可以顯示出隱藏的這一個。 CheckMyTrip 功能跟 tripcase 一樣。    匯率轉換
 XE Currency Converter 算是最有名的匯率轉換 app Currency Converter 我自己覺得也滿方便直覺的 App，直接輸入數字就可以    網路電話</description>
    </item>
    
    <item>
      <title>create bootable USB for mac OS X</title>
      <link>https://hugo.balduran.cc/post/create-bootable-usb-for-mac-os-x/</link>
      <pubDate>Wed, 23 Dec 2015 22:16:50 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/create-bootable-usb-for-mac-os-x/</guid>
      <description>以前都還有光碟，現在的時代筆電都不配光碟了，用 USB 做個開機碟還比方便。
需要一個至少 8G的隨身碟，大於 8G 的其他空間在做成開機碟之後就不能用，所以，就用個剛好 8G 的 USB disk。
簡單作法，用 DiskMaker X，目前支援 10.9, 10.10 and 10.11 的 mac OS X，這個方法推薦給一般使用者。
For commandline lover
 download 10.11 installer from App Store sudo /Applications/Install\ OS\ X\ El\ Capitan.app/Contents/Resources/createinstallmedia--applicationpath /Applications/Install\ OS\ X\ El\ Capitan.app --volume /Volumes/MyVolume 其中的 MyVolume要改成自己的隨身碟 path  開機之後，按住 option 鍵，就可以選用 USB開機，並且安裝。
2018/1/15 更新： 請直接參考 Apple 說明頁面，有詳細指令範例。</description>
    </item>
    
    <item>
      <title>rbenv on mac</title>
      <link>https://hugo.balduran.cc/post/rbenv-on-mac/</link>
      <pubDate>Tue, 05 May 2015 04:37:15 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/rbenv-on-mac/</guid>
      <description>gem install xxxyyy 大概是要在mac安裝些軟體時候會需要做的動作，安裝相依性套件，但是！！ 升級到 10.10 mac很容易跑出這樣的錯誤給你看。
 ERROR: While executing gem &amp;hellip; (Gem::FilePermissionError) You don&amp;rsquo;t have write permissions for the /Library/Ruby/Gems/2.0.0 directory.
 意思是/Library/Ruby/Gems/2.0.0無權限寫入，當然啦！這是root所有的目錄，通常一般人也就用sudo gem install xxxyyy來解決，但這並不是一個很好的方法。
建議用 rbenv來管理ruby的環境，隔離系統內建的ruby(2.0)與開發時候所使用的版本，開發的環境往往需要新舊共存，這樣就不會污染到系統內建的函式庫。
而 rbenv又可以由 brew 來管理，使用 brew 來安裝 rbenv，然後使用 rbenv 來管理 ruby 開發環境 。
brew install rbenv ruby-build #記得安裝完後要將`eval &amp;quot;$(rbenv init -)&amp;quot;` 加入到 bash_profile rbenv install -l 可以查看可供下載的ruby版本
rbenv install 2.0.0-p247 install 2.0.0-p247
rbenv versions list all installed version
rbenv global 2.0.0-p247 設定 2.</description>
    </item>
    
    <item>
      <title>Edit remote files on another UNIX-like server</title>
      <link>https://hugo.balduran.cc/post/edit-remote-files-on-another-unix-like-server/</link>
      <pubDate>Thu, 13 Mar 2014 11:56:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/edit-remote-files-on-another-unix-like-server/</guid>
      <description>做開發工作，處理的系統一旦龐大，往往會蓋自己的開發機器，而不是用本機（不論是Mac, linux or Windows）建立伺服器，原因往往跟套件管理，機器權限管理有關。
大公司都有自己 inhouse 的套件管理，登入機器的權限管理與使用者管理也自有一套系統。想要用原生的 Mac建成類似的系統並且接上各個後端，是吃力不討好。
有些硬派開發者會標榜使用 Vim 無敵，當然這也是一個選項，但是我自己會儘量嘗試各種 IDE或 editor。
想要在本機編輯完程式檔案之後，直接使用開發機器驗證，有幾種方式。
  Aptana
免費版本的就可以直接設定SFTP存取，即時把檔案拉下來編輯的做法。
  sublime with sftp plugin
sublime 也是很方便的編輯器，但是只能編輯本地端檔案，折衷的方式安裝sftp plugin，設定local folder 和 remote folder sync，同時開啟 upload_on_save選項，可以保證在每次存檔的時候就上傳到開發機。
  Mount NFS
直接開發機的目錄掛到本機，並使用自己熟悉的編輯器修改。其中mount的方式也有各種不同。
a. finder mount
finder-&amp;gt;go-&amp;gt;connect to server(cmd+K) 有點麻煩 常常需要重新掛，下shell command的話異常慢。更正：登入後自動掛載
b. MacFusion
MacFusion 是 MacFuse 的圖形化界面，特定版本搭配才ＯＫ，但我忘了是哪些版本。更新：根據fuse for OS X，MacFuse 已經停止維護。wiki頁面有詳細說明。Note for Mountain Lion
  Rsync
寫成bash command，用automator跑或是 Alfred workflow(需付費）執行。
  </description>
    </item>
    
    <item>
      <title>use homebrew on mac</title>
      <link>https://hugo.balduran.cc/post/use-homebrew-on-mac/</link>
      <pubDate>Sat, 30 Mar 2013 04:34:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/use-homebrew-on-mac/</guid>
      <description>homebrew 是 MAC 平台上普遍使用的 package management system. 同類型的工具還有 apt &amp;amp; yum
安裝 homebrew 很簡單，只要在 terminal 輸入 ruby -e “$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)” 安裝完成就可以使用以下指令
 brew install 安裝套件 brew uninstall 移除套件 brew search [foo] 安裝之前先搜尋一下 brew list 列出已安裝套件 brew update 更新已安裝套件 brew upgrade 升級 homebrew  可能遇到的疑難雜症有
 xcode 非最新版 安裝新版即可。   Warning: Your compilers are different from the standard versions for your Xcode. If you have Xcode 4.3 or newer, you should install the Command Line Tools for Xcode from within Xcode’s Download preferences.</description>
    </item>
    
  </channel>
</rss>