<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSH on 說故事給你聽</title>
    <link>https://hugo.balduran.cc/tags/SSH/</link>
    <description>Recent content in SSH on 說故事給你聽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jun 2017 01:43:28 +0000</lastBuildDate>
    
	<atom:link href="https://hugo.balduran.cc/tags/SSH/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mount remote FS over SSH</title>
      <link>https://hugo.balduran.cc/post/mount-remote-fs-over-ssh/</link>
      <pubDate>Mon, 19 Jun 2017 01:43:28 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/mount-remote-fs-over-ssh/</guid>
      <description>工作的場合中常常會需要編輯的檔案，如果是老派的程式猿，會告訴你用 VIM，我以前也是這麼想，不過現在越來越喜歡用單純的編輯器編輯本地端的檔案。
本地端的檔案和遠端伺服器之間就一定需要有同步的機制。
SFTP 有一種做法是直接使用 FTP 軟體瀏覽遠端檔案結構，設定對應的編輯軟體，讓 FTP 軟體幫你傳送到遠端，例如 cyberduck的功能介紹裡所說的 Edit any file with your preferred editor
Mount SSHFS 還有一種做法是將遠端伺服器 mount 到自己本地目錄下。付費軟體有 mountainduck，免費軟體有 macfusion2。
如果是 CMD 控可能會想要打打指令，安裝 sshfs是一定要的。Mac上則是用 osxfuse，安裝完後還要自己下 mount 指令。
 sudo mkdir /mnt/myfolder myfolder 自訂，先開個目錄等等 mount用 sudo sshfs -o allow_other,defer_permissions,IdentityFile=~/.ssh/id_rsa username@xxx.xxx.xxx.xxx:/ /mnt/myfolder 這樣就會用 id_rsa 去連到 xxx.xxx.xxx.xxx，並把遠端的home掛到 myfolder sudo umount /mnt/myfolder 不需要的時候把它移掉  不知道是不是錯覺，有時候感覺 finder 在看 sshfs目錄的時候會很頓。
Rsync over SSH 另外一個方式是直接 Rsync，rsync -avz -e ssh SRC DEST&amp;quot;，如果很在意安全性的話，可以特別做個 ssh key出來，用-e &amp;quot;ssh -i ssh_key&amp;quot;去執行。</description>
    </item>
    
    <item>
      <title>different git repo, different ssh key</title>
      <link>https://hugo.balduran.cc/post/different-git-repo-different-ssh-key/</link>
      <pubDate>Thu, 21 Jan 2016 03:55:02 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/different-git-repo-different-ssh-key/</guid>
      <description>一般來說，git 的 user 設定只要會是自己，所有的 commit 也都是自己的名字。不過剛好工作上有需要用一個共用的 github account 來和另一家公司合作，流程是我方需要隨著對方版本的更新而更新，更新的內容主要就是版號而不是程式實做的更動。
當每一次對方要出新版之前，我方就要先拉下對方新版程式碼，更新我方程式中的版本號，進行測試，測試完成則使用 github 發 PR 給對方，對方會將我方的程式碼納進下次要發行的新版本。
我想要簡化 commit 的時候要輸入共用 github account 的流程，就開始設定 ssh config，同時也做了一個 key for this shared account。
Host github_partner User git HostName github.com IdentityFile ~/.ssh/partnerKey 在 fork 對方 git repo 之後，直接 clone 下來的 remote url 會是 https://github.com/xxxteam/myrepo.git 或是 git@github.com:xxxteam/myrepo.git，直接用這組 url 來 push 的話，還是會要你輸入帳號密碼。
試著將 git@github.com:xxxteam/myrepo.git 改成 git@ github_partner:xxxteam/myrepo.git就會直接使用 ssh config 裡面的 key了，要更簡化的話，github_partner:xxxteam/myrepo.git。</description>
    </item>
    
    <item>
      <title>SSH tunnels</title>
      <link>https://hugo.balduran.cc/post/ssh-tunnels/</link>
      <pubDate>Fri, 05 Oct 2007 06:30:55 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/ssh-tunnels/</guid>
      <description>同事 Kcc教了我從家中電腦遠端連進辦公室電腦的方法，不是用VPN，是用SSH進入院內一台主機，在forward到我使用的電腦，然後用windows內建的遠端桌面連線。
SSH Tunnel我之前沒接觸過，一直想了解三台機器的關係，似乎是本機的 Source port經由和 Host的 SSH連線連到 destination，以遠端桌面為例 destination的 port是3189，Source port是自訂，在開啟遠端桌面連線時候鍵入 127.0.0.1:source port就可。
如果我早一點知道這一招就好了，之前在環保局都是用 port 443連線，不過前提是要有一台 SSH Server可以連線。
由http暗藏通道看網路安全、FreeBSD GIF Tunnel講的是不是同一件事情呢？
Msn: 1080 dynamic勾選，destination空白
IE: 8080 destination:192.168.0.1:3180(??)
OE: Source: 25(smtp),110(pop3)</description>
    </item>
    
  </channel>
</rss>