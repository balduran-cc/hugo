<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yui on 說故事給你聽</title>
    <link>https://hugo.balduran.cc/tags/yui/</link>
    <description>Recent content in yui on 說故事給你聽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Sep 2015 03:01:59 +0000</lastBuildDate>
    
	<atom:link href="https://hugo.balduran.cc/tags/yui/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>javascript 存取瀏覽器的寬高</title>
      <link>https://hugo.balduran.cc/post/javascript-access-height-and-width/</link>
      <pubDate>Thu, 24 Sep 2015 03:01:59 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/javascript-access-height-and-width/</guid>
      <description>瀏覽器的寬高 ###window window 即為瀏覽器本身，瀏覽器的高度，有分兩種，包含工具列與不包含，當然包含工具列的值會比較大，只要不 resize，這個值是不會變的。
window.innerHeight 是不包含工具列的，比較常使用到，是瀏覽器的可視範圍。 window.outerHeight 則是包含的。
網頁文件的寬高 ###[document] document 即為當前瀏覽的網頁，網頁可能很大，比瀏覽器視窗還大，因此 document 的寬高比 window 寬高還要大是正常現象，網頁內容的高度，取值用
 document.body.clientHeight document.documentElement.clientHeight document.documentElement.scrollHeight  三者等價，用document.body就好，不要用 document.height。 [document]: https://developer.mozilla.org/en-US/docs/Web/API/document
width 以此類推，不贅述。
頁面捲動距離 網頁開出來之後，初始捲動的值都是 0，往下滑動之後，Y 軸的值會增加，往右滑動，X 軸的值會增加。這個數值配合 window/document height，可以算出現在出現在使用者面前的頁面是整個網頁的哪一段，例如常見的一些功能是捲到頁面底端之後出現某些模組、按鈕、圖案，就需要用這數值判斷。
以 Y 軸 (垂直)為例
 [window.scrollY] window.pageYOffset document.defaultView.scrollY document.defaultView.pageYOffset  這些數字永遠一樣，統一使用 [window.scrollY] 就好。 [window.scrollY]: https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY
window.scrollTo 則是可以用程式控制頁面捲動到定點，在 iOS 早期的版本，手機版頁面為了讓上方網址列在讀取完之後自動收起，都會用 window.scrollTo(0, 1); 讓瀏覽器以為使用者已經捲動頁面而自動收起網址，不過 mobile safari 已經沒有這樣的設計。
window.scrollBy 則是控制捲動的幅度，稍有不同。
useful framework YUI YUI 有很多好用的 utility function，使用 Y.DOM 就可以拿到寬高。</description>
    </item>
    
    <item>
      <title>Write Cookie in JS level</title>
      <link>https://hugo.balduran.cc/post/write-cookie-in-js-level/</link>
      <pubDate>Mon, 21 Jul 2014 11:06:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/write-cookie-in-js-level/</guid>
      <description>通常我們寫入cookie是直接使用setrawcookie，當然安全性是個問題，在此先不討論。
setrawcookie有個要注意的事項是他必須在http response出去之前就被呼叫，因為他是header的一部份，因此呼叫setrawcookie時要注意return value，或是自己必須確保呼叫之前沒有任何echo。
如果setcookie所要寫入的值是來自于另一個後端，而且這份資料並不是一定要在header建立cookie，為了不讓這個後端擋住前端機器吐頁面，我們可以讓他inline setup cookie。
sample PHP code
$cookie = array(
‘name’ =&amp;gt; $name,
‘value’ =&amp;gt; $value,
‘expiration’ =&amp;gt; $expiration,
‘path’ =&amp;gt; $path,
‘domain’ =&amp;gt; $domain
);
$cookie[‘expiration’] *= 1000; // from seconds to mileseconds
$config = json_encode($cookie);
$script = &amp;laquo;EOS;
Y.use(‘cookie’, function(Y){setcookie = function(config){
Y.Cookie.set(config.name, config.value, {
expires: new Date(config.expiration),
path: config.path,
domain: config.domain
});
};
setcookie($config);
});
EOS;
其中需要注意的是，php 生成的 date() 和 javascript new Date() 的基本單位不同，從 php 傳遞到 js 的時候需要乘以1000。</description>
    </item>
    
    <item>
      <title>Nate Koechley @ NCTU</title>
      <link>https://hugo.balduran.cc/post/nate-at-nctu/</link>
      <pubDate>Thu, 17 Apr 2008 13:37:59 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/nate-at-nctu/</guid>
      <description>現場還是有做徵才的廣告，當然這個時期的廠商校園講座都帶有這個意圖，只要有參加就可以拿到一個筆記本，發問可以拿更多！不過我只合照了一張就離開了。還有 YDN的推廣，以及說明 yahoo! 為何開放的原因，不過這些理由都不構成我的主觀認定，我的認定是這就是網路發展的趨勢，是無法抵擋的。
還有就是，留鬍子真帥。</description>
    </item>
    
  </channel>
</rss>