<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>homebrew on 說故事給你聽</title>
    <link>https://hugo.balduran.cc/tags/homebrew/</link>
    <description>Recent content in homebrew on 說故事給你聽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Dec 2017 23:13:00 +0000</lastBuildDate>
    
	<atom:link href="https://hugo.balduran.cc/tags/homebrew/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 homebrew 快速建立環境</title>
      <link>https://hugo.balduran.cc/post/use-brewfile/</link>
      <pubDate>Mon, 11 Dec 2017 23:13:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/use-brewfile/</guid>
      <description>使用 homebrew 至少也有四五年，真的是 mac 上套件管理的好工具，現在連應用程式都可以幫你裝，大幅減少因為換機而需要建立環境的時間。
現在學到一個新招是使用 Brewfile 一次大量安裝自己需要的套件，概念就跟 npm install 一樣。
這是我自己的 Brewfile，只要安裝好 homebrew，再輸入brew bundle install就會依序安裝。
其中我也使用了 mas-cli，用來安裝 Mac App store上的程式。</description>
    </item>
    
    <item>
      <title>home-brew 1.0.0</title>
      <link>https://hugo.balduran.cc/post/home-brew-1-0-0/</link>
      <pubDate>Mon, 26 Sep 2016 02:54:11 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/home-brew-1-0-0/</guid>
      <description>http://brew.sh/2016/09/21/homebrew-1.0.0/
Mac 上面很好用的套件管理程式 homebrew 已經發佈 1.0.0版。
一些改變如
 套件一律安裝到 /usr/local/Homebrew cask 整合 auto-update brew update 加速  更新的方法很簡單，只要 brew update + brew upgrade就可以了喔</description>
    </item>
    
    <item>
      <title>java SDK on mac</title>
      <link>https://hugo.balduran.cc/post/java-sdk-on-mac/</link>
      <pubDate>Mon, 13 Jul 2015 22:50:02 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/java-sdk-on-mac/</guid>
      <description>##java_home /usr/libexec/java_home 是個 symbolic link，link到目前正在用的 JVM version
$ ll /usr/libexec/java_home lrwxr-xr-x 1 root wheel 79 Oct 28 2014 /usr/libexec/java_home -&amp;gt; /System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java_home*  可以用一個環境變數 $JAVA_HOME 來記住這個 symbolic link 指到的JDK
export JAVA_HOME=$(/usr/libexec/java_home) 同時他可以列出目前安裝在機器上的所有 JDK
$ /usr/libexec/java_home -V Matching Java Virtual Machines (5): 1.8.0_40, x86_64:	&amp;quot;Java SE 8&amp;quot;	/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home 1.7.0_80, x86_64:	&amp;quot;Java SE 7&amp;quot;	/Library/Java/JavaVirtualMachines/jdk1.7.0_80.jdk/Contents/Home 1.7.0_79, x86_64:	&amp;quot;Java SE 7&amp;quot;	/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home 1.6.0_65-b14-466.1, x86_64:	&amp;quot;Java SE 6&amp;quot;	/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home 1.6.0_65-b14-466.1, i386:	&amp;quot;Java SE 6&amp;quot;	/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home /Library/Java/JavaVirtualMachines/jdk1.</description>
    </item>
    
    <item>
      <title>GNU tools on MAC</title>
      <link>https://hugo.balduran.cc/post/gnu-tools-on-mac/</link>
      <pubDate>Fri, 19 Jun 2015 16:04:28 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/gnu-tools-on-mac/</guid>
      <description>在 MAC 與 linux 之間穿梭，就會發現頗多 commandline tool 有些微不一樣，原因就是 MAC OS X 是延續 BSD 發展的，想要加強這些tool，我們可以自己安裝。
##安裝 GCC
身為軟體工程師，安裝 GCC on mac 好像不需要理由。
$ gcc --version Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1 Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn) Target: x86_64-apple-darwin14.3.0 Thread model: posix 內建的gcc是由llvm編譯的。
  安裝 official Command Line Tools for Xcode package 可直接下指令xcode-select --install或是從 https://developer.apple.com/downloads/ 下載 Command Line Tools
  經由 homebrew安裝
  brew tap homebrew/versions brew install gcc48 要更改支援的語言，可從brew options gcc48看可以下的參數。</description>
    </item>
    
    <item>
      <title>change default shell</title>
      <link>https://hugo.balduran.cc/post/change-default-shell/</link>
      <pubDate>Tue, 19 Aug 2014 11:25:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/change-default-shell/</guid>
      <description>Mac OS X預先安裝的bash版本是 3.2.x，已經是非常老舊的版本了，很多 linux的預載版本都已經是 4.1以上，建議是使用 brew 安裝新版的 bash。
brew install bash 會安裝到 /usr/local/bin/ 下
可檢查 $BASH_VERSION 變數，確認版本
如果要更改系統預設的 login shell，需把shell location 加到 /etc/shells 裏，可以直接 sudo vim或是 echo ‘/usr/local/bin/bash’ &amp;raquo; /etc/shells
之後再執行 chsh 就可以更改自己登入後的預設shell了，範例語法chsh /usr/local/bin/bash balduran，之後再輸入密碼就會更改預設shell。</description>
    </item>
    
    <item>
      <title>homebrew error after upgrading to Mac OS X Yosemite</title>
      <link>https://hugo.balduran.cc/post/homebrew-error-after-upgrading-to-mac-os-x-yosemite/</link>
      <pubDate>Tue, 29 Jul 2014 10:16:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/homebrew-error-after-upgrading-to-mac-os-x-yosemite/</guid>
      <description>Yosemite is still in preview, everyone could join beta program and play with it.
我剛好就把 OS 升上 10.10，但遇到homebrew出現錯誤訊息。
 /usr/local/bin/brew: /usr/local/Library/brew.rb: /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby: bad interpreter: No such file or directory
/usr/local/bin/brew: line 26: /usr/local/Library/brew.rb: Undefined error: 0  解法是
 安裝 xcode 6, (beta version) 安裝 command line tool    xcode-select –install
 重新安裝 homebrew   ruby -e “$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”
 安裝完成記得 brew doctor檢查一下  </description>
    </item>
    
    <item>
      <title>use homebrew on mac</title>
      <link>https://hugo.balduran.cc/post/use-homebrew-on-mac/</link>
      <pubDate>Sat, 30 Mar 2013 04:34:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/use-homebrew-on-mac/</guid>
      <description>homebrew 是 MAC 平台上普遍使用的 package management system. 同類型的工具還有 apt &amp;amp; yum
安裝 homebrew 很簡單，只要在 terminal 輸入 ruby -e “$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)” 安裝完成就可以使用以下指令
 brew install 安裝套件 brew uninstall 移除套件 brew search [foo] 安裝之前先搜尋一下 brew list 列出已安裝套件 brew update 更新已安裝套件 brew upgrade 升級 homebrew  可能遇到的疑難雜症有
 xcode 非最新版 安裝新版即可。   Warning: Your compilers are different from the standard versions for your Xcode. If you have Xcode 4.3 or newer, you should install the Command Line Tools for Xcode from within Xcode’s Download preferences.</description>
    </item>
    
  </channel>
</rss>