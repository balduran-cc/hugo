<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bash on 說故事給你聽</title>
    <link>https://hugo.balduran.cc/categories/bash/</link>
    <description>Recent content in bash on 說故事給你聽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Apr 2016 04:10:08 +0000</lastBuildDate>
    
	<atom:link href="https://hugo.balduran.cc/categories/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bash_profile and bashrc</title>
      <link>https://hugo.balduran.cc/post/bash_profile-and-bashrc/</link>
      <pubDate>Tue, 19 Apr 2016 04:10:08 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/bash_profile-and-bashrc/</guid>
      <description>##bash_profile 和 bashrc 的差別
對很多程式人員來說，剛接觸到 Linux (or Mac)，打開 commandline，第一個學的就是 bash(shell)，也往往會 copy 別人的 bashrc來使用。
但不多人知道 bashrc and bash_profile 的差別。
GNU 上的 Bash manual 倒是說得很清楚，差別就在於 interactive shells。
##interactive shells 最簡單的判別方式就是，你敲入一個指令，然後終端機回給你結果，這個時候你就是處在一個 interactive shells。這時候輸入 echo $-，執行結果有 i 代表目前正在一個 interactive shells。
##non-interactive shells 那什麼是 non-interactive shells ?? shell script 在執行的時候，就是一個 non-interactive shells，這時shell script 處理邏輯並依序執行完，$-變數不會有i
當 bash 是以 interactive login shells 執行的時候，也就是最普遍的 ssh hostname的時候，他會依序讀取
 /etc/profile ~/.bash_profile ~/.bash_login ~/.profile，  .profile檔是一開始 sh 的命名，.bash_profile 是為了相容又有所區別
如果已經登入一台機器了，這時候再打一次 bash，這時候還是 interactive shells，但這時已經不是 login shell(不用打密碼了這次)，這時候讀取的設定檔就是</description>
    </item>
    
    <item>
      <title>change default shell</title>
      <link>https://hugo.balduran.cc/post/change-default-shell/</link>
      <pubDate>Tue, 19 Aug 2014 11:25:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/change-default-shell/</guid>
      <description>Mac OS X預先安裝的bash版本是 3.2.x，已經是非常老舊的版本了，很多 linux的預載版本都已經是 4.1以上，建議是使用 brew 安裝新版的 bash。
brew install bash 會安裝到 /usr/local/bin/ 下
可檢查 $BASH_VERSION 變數，確認版本
如果要更改系統預設的 login shell，需把shell location 加到 /etc/shells 裏，可以直接 sudo vim或是 echo ‘/usr/local/bin/bash’ &amp;raquo; /etc/shells
之後再執行 chsh 就可以更改自己登入後的預設shell了，範例語法chsh /usr/local/bin/bash balduran，之後再輸入密碼就會更改預設shell。</description>
    </item>
    
  </channel>
</rss>