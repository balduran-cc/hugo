<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on 說故事給你聽</title>
    <link>https://hugo.balduran.cc/categories/github/</link>
    <description>Recent content in github on 說故事給你聽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Jun 2017 23:32:30 +0000</lastBuildDate>
    
	<atom:link href="https://hugo.balduran.cc/categories/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GPG with git</title>
      <link>https://hugo.balduran.cc/post/gpg-with-git/</link>
      <pubDate>Sun, 18 Jun 2017 23:32:30 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/gpg-with-git/</guid>
      <description>sign code commit with gpg 需要以下步驟。
 安裝 GPG command line 產生 GPG key export GPG public key 在github上設定public key commit and sign  安裝 GPG 可以在 GnuPG 下載安裝，或是用homebrew 執行 brew install gpg
近來也有一個服務，keybase.io 在做 pub/private key 的管理，也可以用它來產生 key
產生 GPG gpg --gen-key 用 command line 做法
或是用 GPG keychain 產生，背後原理都一樣。
export 命令列輸入 gpg --list-secret-keys --keyid-format LONG，如果只輸入 gpg --list-secret-keys，結果沒有顯示 keyid的話，請用 gpg2
gpg --armor --export ==keyid== 可以得到 public key，一長串的字元
-----BEGIN PGP PUBLIC KEY BLOCK----- ABCDE ABCDE ABCDE ABCDE ABCDE -----END PGP PUBLIC KEY BLOCK----- github setting 在github的帳號設定下，貼入以上的 public key string</description>
    </item>
    
    <item>
      <title>ATOM 1.0</title>
      <link>https://hugo.balduran.cc/post/atom-1-0/</link>
      <pubDate>Thu, 25 Jun 2015 19:48:23 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/atom-1-0/</guid>
      <description>昨天 github 公布了 atom editor 進到 1.0
濃濃帶有復古風的介紹影片，非常幽默。
至於為什麼會突然從 0.2 進到 1.0，也許 facebook 的 Nuclide 推了一把吧。
本來就有安裝的話，會自動更新。如果想自行下載新版，可參考 github上的 release 頁面。</description>
    </item>
    
    <item>
      <title>update forked github repo</title>
      <link>https://hugo.balduran.cc/post/update-forked-github-repo/</link>
      <pubDate>Thu, 31 Jul 2014 04:56:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/update-forked-github-repo/</guid>
      <description>Github 很方便的一點就是可以盡量fork自己會用到的library到自己的帳號下，也可以在這些forked repository 之下寫自己的模組。但是github上的 repo是不會自動從原本的repo拉更新。
有兩種做法，第一種是自己打 git command，另一種直接在github頁面上操作。
 git command
以 yui3 為例，原始的repo 是在 https://github.com/yui/yui3 。  $ git remote add upstream https://github.com/yui/yui3.git # add the remote named upstream $ git fetch upstream # fetch the latest version $ git rebase upstream/master # rebase local changes onto upstream/master $ git push origin master # push to forked repo 直接在github web介面操作
在自己的帳號下，選擇 ‘pull requests’。
點 ‘new pull request’，這時會出現 ‘There isn’t anything to compare.</description>
    </item>
    
  </channel>
</rss>