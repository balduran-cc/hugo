<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on 說故事給你聽</title>
    <link>https://hugo.balduran.cc/tags/php/</link>
    <description>Recent content in php on 說故事給你聽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Sep 2016 01:41:15 +0000</lastBuildDate>
    
	<atom:link href="https://hugo.balduran.cc/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>php codes analyze tools</title>
      <link>https://hugo.balduran.cc/post/php-codes-analyze-tools/</link>
      <pubDate>Tue, 20 Sep 2016 01:41:15 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/php-codes-analyze-tools/</guid>
      <description>PHP 程式檢測工具
 php -l xxx.php 最簡單，僅檢查 syntax PHPSA phar或composer安裝，靜態檢查工具 PHP_CodeSniffer phpcs，曾經存在過 PHPMD 一樣 phar或composer安裝，仿自 java 的 PMD  </description>
    </item>
    
    <item>
      <title>define require include and env variable in PHP</title>
      <link>https://hugo.balduran.cc/post/define-require-include-and-env-variable-in-php/</link>
      <pubDate>Fri, 22 Apr 2016 02:10:54 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/define-require-include-and-env-variable-in-php/</guid>
      <description>Env variable 如果是變數，且是敏感資料，不能 commit 進 git (version control)，那請用 envronment variable，最好舉的例子就是 DB password。
在 shell 裡 export BD_PASSWD=&amp;quot;Passw0rd!，設定好環境變數，
php 裡可以用
 $_ENV 讀取。 getenv function取的。  define 如果是固定的字串，例如 PATH、SRC_PATH、INC_PATH，這些是固定內容的常數那就使用 define。
 const FOO=&#39;BAR&#39;; define(&#39;FOO&#39;, &#39;BAR&#39;);  程式原始碼或是一些include files可以放在一個共通的目錄，這時候 define SRC_PATH 就很適合。
常見的組合是用 define 從環境變數設定值。 define(&#39;DB_PASSWD&#39;, getenv(&#39;APP_DB_PASSWD&#39;));
require and include require 是用來引入(include)其他的 php檔案，如果引入失敗，會產生 FATAL error，include 則只是產生 warning。
require 也會先讀取 required file 並執行，include 則是單純把檔案內容引入而已，所以有時候會看到 if/else 配合 include 使用，動態載入 某些程式(一組的變數等等)，至於使用第三人寫的library，那就使用 require
有時候會看到 require($config.php);，首先 require 是 statement，不需要把它當成 function，第二則是不要 require 變數。</description>
    </item>
    
    <item>
      <title>伺服器安全性注意要點</title>
      <link>https://hugo.balduran.cc/post/si-fu-qi-an-quan-xing-zhu-yi-yao-dian/</link>
      <pubDate>Tue, 02 Jun 2015 02:17:09 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/si-fu-qi-an-quan-xing-zhu-yi-yao-dian/</guid>
      <description>##php.ini 增強安全性
  disable_functions =exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source
  allow_url_fopen=Off
  allow_url_include=Off
  expose_php=Off http header (X-Powered-By) 不帶php info
  load less modules php -m 可看 module 列表 rename 副檔名 ini 成 disable mv /etc/php.d/sqlite3.ini /etc/php.d/sqlite3.disable
  display_errors=Off lod error 但不讓 end user 看到
  file_uploads=Off 關閉上傳檔案，如果必要，限制檔案大小
  file_uploads=On upload_max_filesize=1M   sql.safe_mode=On
  magic_quotes_gpc=Off
  避免執行過久，耗用資源，避免阻斷攻擊 DoS
  max_execution_time = 30 max_input_time = 30 memory_limit = 40M   cgi.</description>
    </item>
    
    <item>
      <title>Hide php from user</title>
      <link>https://hugo.balduran.cc/post/hide-php-from-user/</link>
      <pubDate>Tue, 22 Jul 2014 09:57:00 +0000</pubDate>
      
      <guid>https://hugo.balduran.cc/post/hide-php-from-user/</guid>
      <description>為了安全性的理由，我們儘量不想讓網頁的副檔名出現在url內，也就是儘量不讓外界得知 uri 的實際檔案形態，例如 https://www.google.com.tw/?#q=obj 就完全把負責處理的檔案名稱隱藏了。
php.net 上有說明頁面，可用的php ini
expose_php = off
或是
AddType application/x-httpd-php .asp .py .pl
此為偽裝php 為其他script lang
AddType application/x-httpd-php .htm .html
此為偽裝php 為靜態html 頁面
除此之外，還有sethandler可用。</description>
    </item>
    
  </channel>
</rss>